{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\nconst token = localStorage.getItem(\"authToken\");\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  console.log('product', product);\n  console.log(\"auth token==>\", token);\n\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await axios.post('http://localhost:3000/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('http://localhost:3000/api/products' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = product => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:3000/api/products\" + product);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["D:/P-300/amazona/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","Axios","token","localStorage","getItem","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","console","log","userSignin","userInfo","_id","post","headers","Authorization","put","detailsProduct","productId"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\nconst token = localStorage.getItem(\"authToken\")\r\nconst listProducts = () => async (dispatch) => {\r\n  try {\r\n\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\"/api/products\",);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  }\r\n  catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n\r\n\r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n  console.log('product', product)\r\n  console.log(\"auth token==>\", token)\r\n  try {\r\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n\r\n    if (!product._id) {\r\n      const { data } = await axios.post(\r\n        'http://localhost:3000/api/products',\r\n        product,\r\n        {\r\n          headers: {\r\n            Authorization:  'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n    dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n  } else {\r\n    const { data } = await Axios.put(\r\n      'http://localhost:3000/api/products' + product._id,\r\n      product,\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n  }\r\n} catch (error) {\r\n  dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n}\r\n};\r\n\r\n\r\n\r\nconst detailsProduct = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    const { data } = await axios.get(\"http://localhost:3000/api/products\" + product);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n\r\n  }\r\n}\r\nexport { listProducts, detailsProduct, saveProduct }"]},"metadata":{},"sourceType":"module"}