{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["D:/P-300/raisan/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsProduct","productId"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL  } from \"../constants/productConstants\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) =>{\r\n    try{\r\n\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      if (!product._id) {\r\n        const { data } = await Axios.post('/api/products', product, {\r\n          headers: {\r\n            Authorization : 'Bearer ' + userInfo.token,\r\n          },\r\n        });\r\n        dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n      } else {\r\n        const { data } = await Axios.put(\r\n          '/api/products/' + product._id,\r\n          product,\r\n          {\r\n            headers: {\r\n              Authorization : 'Bearer ' + userInfo.token,\r\n            },\r\n          }\r\n        );\r\n        dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n       dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n       const {data} = await axios.get(\"/api/products/\" + productId);\r\n       dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n        \r\n    }\r\n}\r\nexport{ listProducts, detailsProduct,saveProduct}"]},"metadata":{},"sourceType":"module"}