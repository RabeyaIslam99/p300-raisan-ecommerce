{"ast":null,"code":"var _jsxFileName = \"D:\\\\P-300\\\\raisan\\\\frontend\\\\src\\\\screens\\\\ProductsScreen.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductsScreen(props) {\n  _s();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = productDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listProducts());\n    return () => {//\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = product => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setDescription(product.description);\n    setImage(product.image);\n    setBrand(product.brand);\n    setCategory(product.category);\n    setCountInStock(product.countInStock);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const deleteHandler = product => {\n    dispatch(deleteProdcut(product._id));\n  };\n\n  const uploadFileHandler = e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setUploading(true);\n    axios.post('/api/uploads', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setImage(response.data);\n      setUploading(false);\n    }).catch(err => {\n      console.log(err);\n      setUploading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content content-margined\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button primary\",\n        onClick: () => openModal({}),\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [loadingSave && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 35\n            }, this), errorSave && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errorSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: name,\n              id: \"name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"price\",\n              value: price,\n              id: \"price\",\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"image\",\n              value: image,\n              id: \"image\",\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: uploadFileHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Uploading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"brand\",\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"brand\",\n              value: brand,\n              id: \"brand\",\n              onChange: e => setBrand(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"countInStock\",\n              children: \"CountInStock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"countInStock\",\n              value: countInStock,\n              id: \"countInStock\",\n              onChange: e => setCountInStock(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"category\",\n              value: category,\n              id: \"category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: description,\n              id: \"description\",\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button primary\",\n              children: id ? 'Update' : 'Create'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setModalVisible(false),\n              className: \"button secondary\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => openModal(product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => deleteHandler(product),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n\n_c = ProductsScreen;\n\n_s(ProductsScreen, \"Vok7pRwinLVryWqcwXtKEMw5T4M=\", true);\n\nexport default ProductsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"sources":["D:/P-300/raisan/frontend/src/screens/ProductsScreen.js"],"names":["ProductsScreen","props","modalVisible","setModalVisible","useState","id","setId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","productList","useSelector","state","loading","products","error","productSave","loadingSave","success","successSave","errorSave","productDelete","loadingDelete","successDelete","errorDelete","dispatch","useDispatch","useEffect","listProducts","openModal","product","_id","submitHandler","e","preventDefault","saveProduct","deleteHandler","deleteProdcut","uploadFileHandler","file","target","files","bodyFormData","FormData","append","axios","post","headers","then","response","data","catch","err","console","log","value","map"],"mappings":"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","sourcesContent":["function ProductsScreen(props) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, products, error } = productList;\r\n  \r\n    const productSave = useSelector((state) => state.productSave);\r\n    const {\r\n      loading: loadingSave,\r\n      success: successSave,\r\n      error: errorSave,\r\n    } = productSave;\r\n  \r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n      loading: loadingDelete,\r\n      success: successDelete,\r\n      error: errorDelete,\r\n    } = productDelete;\r\n    const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (successSave) {\r\n        setModalVisible(false);\r\n      }\r\n      dispatch(listProducts());\r\n      return () => {\r\n        //\r\n      };\r\n    }, [successSave, successDelete]);\r\n  \r\n    const openModal = (product) => {\r\n      setModalVisible(true);\r\n      setId(product._id);\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setDescription(product.description);\r\n      setImage(product.image);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n    };\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(\r\n        saveProduct({\r\n          _id: id,\r\n          name,\r\n          price,\r\n          image,\r\n          brand,\r\n          category,\r\n          countInStock,\r\n          description,\r\n        })\r\n      );\r\n    };\r\n    const deleteHandler = (product) => {\r\n      dispatch(deleteProdcut(product._id));\r\n    };\r\n    const uploadFileHandler = (e) => {\r\n      const file = e.target.files[0];\r\n      const bodyFormData = new FormData();\r\n      bodyFormData.append('image', file);\r\n      setUploading(true);\r\n      axios\r\n        .post('/api/uploads', bodyFormData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setImage(response.data);\r\n          setUploading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setUploading(false);\r\n        });\r\n    };\r\n    return (\r\n      <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n          <h3>Products</h3>\r\n          <button className=\"button primary\" onClick={() => openModal({})}>\r\n            Create Product\r\n          </button>\r\n        </div>\r\n        {modalVisible && (\r\n          <div className=\"form\">\r\n            <form onSubmit={submitHandler}>\r\n              <ul className=\"form-container\">\r\n                <li>\r\n                  <h2>Create Product</h2>\r\n                </li>\r\n                <li>\r\n                  {loadingSave && <div>Loading...</div>}\r\n                  {errorSave && <div>{errorSave}</div>}\r\n                </li>\r\n  \r\n                <li>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    id=\"name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></input>\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"price\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    id=\"price\"\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  ></input>\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"image\">Image</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    value={image}\r\n                    id=\"image\"\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                  ></input>\r\n                  <input type=\"file\" onChange={uploadFileHandler}></input>\r\n                  {uploading && <div>Uploading...</div>}\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"brand\">Brand</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"brand\"\r\n                    value={brand}\r\n                    id=\"brand\"\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                  ></input>\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"countInStock\">CountInStock</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"countInStock\"\r\n                    value={countInStock}\r\n                    id=\"countInStock\"\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                  ></input>\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"name\">Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    value={category}\r\n                    id=\"category\"\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  ></input>\r\n                </li>\r\n                <li>\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    value={description}\r\n                    id=\"description\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </li>\r\n                <li>\r\n                  <button type=\"submit\" className=\"button primary\">\r\n                    {id ? 'Update' : 'Create'}\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setModalVisible(false)}\r\n                    className=\"button secondary\"\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </form>\r\n          </div>\r\n        )}\r\n  \r\n        <div className=\"product-list\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <button className=\"button\" onClick={() => openModal(product)}>\r\n                      Edit\r\n                    </button>{' '}\r\n                    <button\r\n                      className=\"button\"\r\n                      onClick={() => deleteHandler(product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  export default ProductsScreen;"]},"metadata":{},"sourceType":"module"}