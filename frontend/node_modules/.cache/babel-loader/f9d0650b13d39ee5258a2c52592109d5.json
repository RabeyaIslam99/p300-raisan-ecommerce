{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('./api/products', product, {\n      headers: {\n        'Authorization': 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["D:/P-300/raisan/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","post","headers","token","PRODUCT_SAVE_FAIL","detailsProduct","productId"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAyEC,uBAAzE,EAAkGC,uBAAlG,EAA2HC,oBAA3H,EAAiJC,oBAAjJ,EAAuKC,oBAAvK,QAAoM,+BAApM;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAmB;AAC1C,MAAG;AAECA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACJ,UAAM;AAACY,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,oBAAR;AAA8Ba,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACC,GALD,CAMA,OAAMG,KAAN,EACA;AACIL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,iBAAR;AAA2Be,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AAGJ,CAbD;;AAgBA,MAAMC,WAAW,GAAIC,OAAD,GAAY,OAAOR,QAAP,EAAiBS,QAAjB,KAA6B;AACzD,MAAI;AACDT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,oBAAP;AAA6BS,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAACE,MAAAA,UAAU,EAAC;AAACC,QAAAA;AAAD;AAAZ,QAAyBF,QAAQ,EAAvC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACc,IAAN,CAAW,gBAAX,EAA6BJ,OAA7B,EAAqC;AAACK,MAAAA,OAAO,EAAC;AAChE,yBAAiB,WAAWF,QAAQ,CAACG;AAD2B;AAAT,KAArC,CAArB;AAIAd,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,oBAAN;AAA4BQ,MAAAA,OAAO,EAACF;AAApC,KAAD,CAAR;AACF,GARD,CAQE,OAAOG,KAAP,EAAc;AAEZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACc,iBAAN;AAAyBX,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAvC,KAAD,CAAR;AAEH;AACJ,CAdD;;AAkBA,MAAMU,cAAc,GAAIC,SAAD,IAAe,MAAOjB,QAAP,IAAoB;AACtD,MAAI;AACDA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,uBAAP;AAAgCY,MAAAA,OAAO,EAAEa;AAAzC,KAAD,CAAR;AACA,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,mBAAmBc,SAA7B,CAArB;AACAjB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,uBAAP;AAAgCW,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACF,GAJD,CAIE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,oBAAP;AAA6BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AAEH;AACJ,CATD;;AAUA,SAAQP,YAAR,EAAsBiB,cAAtB,EAAqCT,WAArC","sourcesContent":["import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS  } from \"../constants/productConstants\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) =>{\r\n    try{\r\n\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst saveProduct = (product) = async (dispatch, getState) =>{\r\n    try {\r\n       dispatch({type: PRODUCT_SAVE_REQUEST, payload: product}); \r\n       const {userSignin:{userInfo}}= getState();\r\n       const {data} = await Axios.post('./api/products', product,{headers:{\r\n          'Authorization': 'Bearer' + userInfo.token \r\n\r\n       }});\r\n       dispatch({type:PRODUCT_SAVE_SUCCESS, payload:data});\r\n    } catch (error) {\r\n\r\n        dispatch({type:PRODUCT_SAVE_FAIL, payload:error.message});\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n       dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n       const {data} = await axios.get(\"/api/products/\" + productId);\r\n       dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n        \r\n    }\r\n}\r\nexport{ listProducts, detailsProduct,saveProduct}"]},"metadata":{},"sourceType":"module"}